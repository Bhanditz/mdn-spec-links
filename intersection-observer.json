{
    "dom-intersectionobserver-disconnect": [
        {
            "slug": "API/IntersectionObserver/disconnect",
            "summary": "The IntersectionObserver method disconnect() stops watching all of its target elements for visibility changes.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "notes": "Available since <a href='https://developer.microsoft.com/en-us/microsoft-edge/platform/status/intersectionobserver/'>Windows Insider Preview Build 14986</a>",
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.disconnect()"
        }
    ],
    "dom-intersectionobserver-intersectionobserver": [
        {
            "slug": "API/IntersectionObserver/IntersectionObserver",
            "summary": "The IntersectionObserver() constructor creates and returns a new IntersectionObserver object.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.IntersectionObserver()"
        }
    ],
    "dom-intersectionobserver-observe": [
        {
            "slug": "API/IntersectionObserver/observe",
            "summary": "The IntersectionObserver method observe() adds an element to the set of target elements being watched by the IntersectionObserver. One observer has one set of thresholds and one root, but can watch multiple target elements for visibility changes in keeping with those.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.observe()"
        }
    ],
    "dom-intersectionobserver-root": [
        {
            "slug": "API/IntersectionObserver/root",
            "summary": "The IntersectionObserver interface's read-only root property identifies the Element whose bounds are treated as the bounding box of the viewport for the element which is the observer's target. If the root is null, then the bounds of the actual document viewport are used.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.root"
        }
    ],
    "dom-intersectionobserver-rootMargin": [
        {
            "slug": "API/IntersectionObserver/rootMargin",
            "summary": "The IntersectionObserver interface's read-only rootMargin property is a string with syntax similar to that of the CSS margin property. Each side of the rectangle represented by rootMargin is added to the corresponding side in the root element's bounding box before the intersection test is performed. This lets you, for example, adjust the bounds outward so that the target element is considered 100% visible even if a certain number of pixels worth of width or height is clipped away, or treat the target as partially hidden if an edge is too close to the edge of the root's bounding box.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.rootMargin"
        }
    ],
    "dom-intersectionobserver-takeRecords": [
        {
            "slug": "API/IntersectionObserver/takeRecords",
            "summary": "The IntersectionObserver method takeRecords() returns an array of IntersectionObserverEntry objects, one for each targeted element which has experienced an intersection change since the last time the intersections were checked, either explicitly through a call to this method or implicitly by an automatic call to the observer's callback. ",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "notes": "Available since <a href='https://developer.microsoft.com/en-us/microsoft-edge/platform/status/intersectionobserver/'>Windows Insider Preview Build 14986</a>",
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.takeRecords()"
        }
    ],
    "dom-intersectionobserver-thresholds": [
        {
            "slug": "API/IntersectionObserver/thresholds",
            "summary": "The IntersectionObserver interface's read-only thresholds property returns the list of intersection thresholds that was specified when the observer was instantiated with IntersectionObserver(). If only one threshold ratio was provided when instanitating the object, this will be an array containing that single value.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.thresholds"
        }
    ],
    "dom-intersectionobserver-unobserve": [
        {
            "slug": "API/IntersectionObserver/unobserve",
            "summary": "The IntersectionObserver method unobserve() instructs the IntersectionObserver to stop observing the specified target element.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "notes": "Available since <a href='https://developer.microsoft.com/en-us/microsoft-edge/platform/status/intersectionobserver/'>Windows Insider Preview Build 14986</a>",
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserver.unobserve()"
        }
    ],
    "dom-intersectionobserverentry-boundingClientRect": [
        {
            "slug": "API/IntersectionObserverEntry/boundingClientRect",
            "summary": "The IntersectionObserverEntry interface's read-only boundingClientRect property returns a DOMRectReadOnly which in essence describes a rectangle describing the smallest rectangle that contains the entire target element.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.boundingClientRect"
        }
    ],
    "dom-intersectionobserverentry-intersectionratio": [
        {
            "slug": "API/IntersectionObserverEntry/intersectionRatio",
            "summary": "The IntersectionObserverEntry interface's read-only intersectionRatio property tells you how much of the target element is currently visible within the root's intersection ratio, as a value between 0.0 and 1.0.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.intersectionRatio"
        }
    ],
    "dom-intersectionobserverentry-intersectionrect": [
        {
            "slug": "API/IntersectionObserverEntry/intersectionRect",
            "summary": "The IntersectionObserverEntry interface's read-only intersectionRect property is a DOMRectReadOnly object which describes the smallest rectangle that contains the entire portion of the target element which is currently visible within the intersection root.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.intersectionRect"
        }
    ],
    "dom-intersectionobserverentry-isintersecting": [
        {
            "slug": "API/IntersectionObserverEntry/isIntersecting",
            "summary": "The IntersectionObserverEntry interface's read-only isIntersecting property is a Boolean value which is true if the target element intersects with the intersection observer's root. If this is true, then, the IntersectionObserverEntry describes a transition into a state of intersection; if it's false, then you know the transition is from intersecting to not-intersecting.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "16"
                },
                "edge_mobile": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.isIntersecting"
        }
    ],
    "dom-intersectionobserverentry-rootbounds": [
        {
            "slug": "API/IntersectionObserverEntry/rootBounds",
            "summary": "The IntersectionObserverEntry interface's read-only rootBounds property is a DOMRectReadOnly corresponding to the target's root intersection rectangle, offset by the IntersectionObserver.rootMargin if one is specified.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.rootBounds"
        }
    ],
    "dom-intersectionobserverentry-target": [
        {
            "slug": "API/IntersectionObserverEntry/target",
            "summary": "The IntersectionObserverEntry interface's read-only target property indicates which targeted Element has changed its amount of intersection with the intersection root.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.target"
        }
    ],
    "dom-intersectionobserverentry-time": [
        {
            "slug": "API/IntersectionObserverEntry/time",
            "summary": "The IntersectionObserverEntry interface's read-only time property is a DOMHighResTimeStamp that indicates the time at which the intersection change occurred relative to the time at which the document was created.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry.time"
        }
    ],
    "intersection-observer-entry": [
        {
            "slug": "API/IntersectionObserverEntry",
            "summary": "The IntersectionObserverEntry interface of the Intersection Observer API describes the intersection between the target element and its root container at a specific moment of transition.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "15"
                },
                "edge_mobile": {
                    "version_added": true
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "flags": [
                            {
                                "name": "dom.IntersectionObserver.enabled",
                                "type": "preference",
                                "value_to_set": "true"
                            }
                        ],
                        "version_added": "53",
                        "version_removed": "55"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                }
            },
            "title": "IntersectionObserverEntry"
        }
    ]
}
